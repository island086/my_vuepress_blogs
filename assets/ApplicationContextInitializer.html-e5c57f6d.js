import{a1 as n,a2 as a,a3 as s,a8 as e}from"./framework-b045dc94.js";const i={},t=e(`<p><strong>ApplicationContextInitializer</strong> 接口用于在 <strong>Spring</strong> 容器刷新之前执行的一个回调函数，通常用于向 <strong>SpringBoot</strong> 容器中注入属性。</p><h4 id="_1-使用" tabindex="-1"><a class="header-anchor" href="#_1-使用" aria-hidden="true">#</a> 1. 使用</h4><h5 id="_1-1-自定义applicationcontextinitializer" tabindex="-1"><a class="header-anchor" href="#_1-1-自定义applicationcontextinitializer" aria-hidden="true">#</a> 1.1 自定义ApplicationContextInitializer</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**  
 * 自定义ApplicationContextInitializer  
 */</span>
 <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">CustomerTypeExcludeFilterApplicationContextInitializer</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationContextInitializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigurableApplicationContext</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
		    <span class="token comment">//TODO</span>
    <span class="token punctuation">}</span>  
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-applicationcontextinitializer-声明位置" tabindex="-1"><a class="header-anchor" href="#_1-2-applicationcontextinitializer-声明位置" aria-hidden="true">#</a> 1.2 ApplicationContextInitializer 声明位置</h5><ul><li>SpringBoot main方法</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestApplication</span> <span class="token punctuation">{</span>  
  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">SpringApplication</span> springApplication <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">(</span><span class="token class-name">TestApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//添加ApplicationInitializer  </span>
        springApplication<span class="token punctuation">.</span><span class="token function">addInitializers</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CustomerTypeExcludeFilterApplicationContextInitializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        springApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>application.properties/yml</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">context</span><span class="token punctuation">:</span>  
  <span class="token key atrule">initializer</span><span class="token punctuation">:</span>  
    <span class="token key atrule">classes</span><span class="token punctuation">:</span> 
      com.example.test.TestApplication.CustomerTypeExcludeFilterApplicationContextInitializer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在Resources/META-INF/spring.factories 下添加ApplicationContextInitializer</li></ul><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">org.springframework.context.ApplicationContextInitializer</span><span class="token punctuation">=</span><span class="token value attr-value">\\  </span>
com.example.test.TestApplication.CustomerTypeExcludeFilterApplicationContextInitializer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,11),p=[t];function l(c,o){return a(),s("div",null,p)}const u=n(i,[["render",l],["__file","ApplicationContextInitializer.html.vue"]]);export{u as default};
